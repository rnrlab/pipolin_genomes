{"title":"AMRfinder","markdown":{"yaml":{"title":"AMRfinder","author":"Guillermo Cerrillo","format":"html","editor":"visual"},"headingText":"Files","containsRefs":false,"markdown":"\n\n```{r}\n#| label: load-packages\n#| message: false\n#| echo: false\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(stringr)\nlibrary(dplyr)\n```\n\n\nLos archivos usados son los resultados obtenidos con el script [amrfinder.py](amrfinder.py) y un compendio de datos sobre todos los genomas disponibles, del cuál solo nos interesa sus datos taxonómicos y su ID.\n\n```{r}\n#| label: files\n#| message: false\ndata_amrf <- read.csv(\"AMRfinder_output.csv\", sep=\"\\t\", stringsAsFactors = F)\npipolin_summary <- read_tsv(\"pipolin_summary_new.tsv\")\ntaxonomy_data <- pipolin_summary[,c(3,34,38:44)]\nrm(pipolin_summary)\n```\n\n## Obtaining the Genome_ID\n\nLos datos del Genome_ID se pueden obtener de los hits de cada genoma. Para extraer sólo cierta parte de una string podemos usar la función `str_extract()` del paquete `stringr`.\n\n```{r}\n#| label: Genome_ID\ndata_amrf_new <- data_amrf\ndata_amrf_new$Genome_ID<-NA\ndata_amrf_new$Genome_ID<-stringr::str_extract(string = data_amrf_new$Protein.identifier, pattern = \"G_[0-9]+\")\ndata_amrf_new <- data_amrf_new[,c(19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18)]\ndata_amrf_merge <- merge(data_amrf_new, taxonomy_data, by=\"Genome_ID\")\n\ndata_amrf_filtered <- distinct(data_amrf_merge, Genome_ID, Class)\ndata_amrf_filtered_merged <- merge(data_amrf_filtered, taxonomy_data, all.x = T)\ndata_amrf_filtered_merged <- unique(data_amrf_filtered_merged)\ndata_amrf_filtered_merged <- data_amrf_filtered_merged %>%filter(!is.na(class))\n```\n\n## Counting the occurrence of resistences\n\nNos interesa saber la cantidad de genomas que tienen 0, 1, 2, 3, etc. resistencias. Para ello hacemos un df con todos los genomas y hacemos un merge con la información taxonómica. Si el merge lo hacemos según Genome_ID nuestro plot no mostrará la cantidad de genomas que no tienen resistencia. Para mostrar también estos últimos, el merge lo haremos según el data frame que contiene la información taxonómica.\n\n```{r}\n#| label: Count\nGenome_amrf_name <- as.vector(names(table(data_amrf_new$Genome)))\nGenome_amrf_count <- as.vector(table(data_amrf_new$Genome))\ndf_amrf_genome <- data.frame(Genome_amrf_name, Genome_amrf_count)\ndf_amrf_genome <- distinct(df_amrf_genome)\nnames(df_amrf_genome) <- c(\"Genome_ID\",\"Count\")\n\ndf_temp <- data.frame(taxonomy_data$Genome_ID, taxonomy_data$Genus_rev)\ndf_temp <- distinct(df_temp)\nnames(df_temp) <- c(\"Genome_ID\",\"Genus_rev\")\n\ndf_amrf_genome2 <- merge(df_amrf_genome, df_temp, by=\"Genome_ID\")\n\ndf_amrf_genome3 <- merge(taxonomy_data, df_amrf_genome2, all.x = T)\ndf_amrf_genome3$Count[which((grepl(\"[0-9]+\", df_amrf_genome3$Count)==F))]<-0\n```\n\n## Plots\n\nEl primer gráfico muestra la frecuencia relativa de presencia de cierta resistencia, coloreada según pertenencia a los géneros más relevantes de bacterias y dividido por clase taxonómica.\n\n```{r}\n#| label: Plot1\n#Percentage of Resistence found in relevant Genus\nggplot(data_amrf_filtered_merged, aes(x=Class)) +\n  geom_bar(aes(y = after_stat(count)/11430, fill = Genus_rev, alpha=0.1), stat = \"count\", col = \"black\", alpha = 0.6) +\n  facet_grid(.~class, scale=\"free_x\",space=\"free\") + scale_y_continuous(labels=scales::percent) + xlab(\"RESISTENCE\") + ylab(\"Relative Freq\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5, face = \"bold\"))\n```\n\nEl segundo muestra qué cantidad de genomas tienen x número de resistencias, sólo para genomas que tengan al menos una.\n\n```{r}\n#| label: Plot2\n#nº of Resistences (without Nulls)\nggplot(df_amrf_genome2, aes(Count, fill=Genus_rev)) + geom_bar(stat=\"count\") +\n  xlab(\"Nº OF RESISTENCES\") + ylab(\"OCCURRENCE\")\n```\n\nEl tercero muestra qué cantidad de genomas tienen x número de resistencias, incluyendo aquellos que no presentan ninguna.\n\n```{r}\n#| label: Plot3\n#nº of Resistences (with Nulls)\nggplot(df_amrf_genome3, aes(Count, fill=Genus_rev)) + geom_bar(stat=\"count\") +\n  xlab(\"Nº OF RESISTENCES\") + ylab(\"OCCURRENCE\")\n```\n\n## Session Info\n\n```{r}\n#| label: session-info\n#| echo: false\nsessionInfo()\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n#| label: load-packages\n#| message: false\n#| echo: false\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(stringr)\nlibrary(dplyr)\n```\n\n## Files\n\nLos archivos usados son los resultados obtenidos con el script [amrfinder.py](amrfinder.py) y un compendio de datos sobre todos los genomas disponibles, del cuál solo nos interesa sus datos taxonómicos y su ID.\n\n```{r}\n#| label: files\n#| message: false\ndata_amrf <- read.csv(\"AMRfinder_output.csv\", sep=\"\\t\", stringsAsFactors = F)\npipolin_summary <- read_tsv(\"pipolin_summary_new.tsv\")\ntaxonomy_data <- pipolin_summary[,c(3,34,38:44)]\nrm(pipolin_summary)\n```\n\n## Obtaining the Genome_ID\n\nLos datos del Genome_ID se pueden obtener de los hits de cada genoma. Para extraer sólo cierta parte de una string podemos usar la función `str_extract()` del paquete `stringr`.\n\n```{r}\n#| label: Genome_ID\ndata_amrf_new <- data_amrf\ndata_amrf_new$Genome_ID<-NA\ndata_amrf_new$Genome_ID<-stringr::str_extract(string = data_amrf_new$Protein.identifier, pattern = \"G_[0-9]+\")\ndata_amrf_new <- data_amrf_new[,c(19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18)]\ndata_amrf_merge <- merge(data_amrf_new, taxonomy_data, by=\"Genome_ID\")\n\ndata_amrf_filtered <- distinct(data_amrf_merge, Genome_ID, Class)\ndata_amrf_filtered_merged <- merge(data_amrf_filtered, taxonomy_data, all.x = T)\ndata_amrf_filtered_merged <- unique(data_amrf_filtered_merged)\ndata_amrf_filtered_merged <- data_amrf_filtered_merged %>%filter(!is.na(class))\n```\n\n## Counting the occurrence of resistences\n\nNos interesa saber la cantidad de genomas que tienen 0, 1, 2, 3, etc. resistencias. Para ello hacemos un df con todos los genomas y hacemos un merge con la información taxonómica. Si el merge lo hacemos según Genome_ID nuestro plot no mostrará la cantidad de genomas que no tienen resistencia. Para mostrar también estos últimos, el merge lo haremos según el data frame que contiene la información taxonómica.\n\n```{r}\n#| label: Count\nGenome_amrf_name <- as.vector(names(table(data_amrf_new$Genome)))\nGenome_amrf_count <- as.vector(table(data_amrf_new$Genome))\ndf_amrf_genome <- data.frame(Genome_amrf_name, Genome_amrf_count)\ndf_amrf_genome <- distinct(df_amrf_genome)\nnames(df_amrf_genome) <- c(\"Genome_ID\",\"Count\")\n\ndf_temp <- data.frame(taxonomy_data$Genome_ID, taxonomy_data$Genus_rev)\ndf_temp <- distinct(df_temp)\nnames(df_temp) <- c(\"Genome_ID\",\"Genus_rev\")\n\ndf_amrf_genome2 <- merge(df_amrf_genome, df_temp, by=\"Genome_ID\")\n\ndf_amrf_genome3 <- merge(taxonomy_data, df_amrf_genome2, all.x = T)\ndf_amrf_genome3$Count[which((grepl(\"[0-9]+\", df_amrf_genome3$Count)==F))]<-0\n```\n\n## Plots\n\nEl primer gráfico muestra la frecuencia relativa de presencia de cierta resistencia, coloreada según pertenencia a los géneros más relevantes de bacterias y dividido por clase taxonómica.\n\n```{r}\n#| label: Plot1\n#Percentage of Resistence found in relevant Genus\nggplot(data_amrf_filtered_merged, aes(x=Class)) +\n  geom_bar(aes(y = after_stat(count)/11430, fill = Genus_rev, alpha=0.1), stat = \"count\", col = \"black\", alpha = 0.6) +\n  facet_grid(.~class, scale=\"free_x\",space=\"free\") + scale_y_continuous(labels=scales::percent) + xlab(\"RESISTENCE\") + ylab(\"Relative Freq\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5, face = \"bold\"))\n```\n\nEl segundo muestra qué cantidad de genomas tienen x número de resistencias, sólo para genomas que tengan al menos una.\n\n```{r}\n#| label: Plot2\n#nº of Resistences (without Nulls)\nggplot(df_amrf_genome2, aes(Count, fill=Genus_rev)) + geom_bar(stat=\"count\") +\n  xlab(\"Nº OF RESISTENCES\") + ylab(\"OCCURRENCE\")\n```\n\nEl tercero muestra qué cantidad de genomas tienen x número de resistencias, incluyendo aquellos que no presentan ninguna.\n\n```{r}\n#| label: Plot3\n#nº of Resistences (with Nulls)\nggplot(df_amrf_genome3, aes(Count, fill=Genus_rev)) + geom_bar(stat=\"count\") +\n  xlab(\"Nº OF RESISTENCES\") + ylab(\"OCCURRENCE\")\n```\n\n## Session Info\n\n```{r}\n#| label: session-info\n#| echo: false\nsessionInfo()\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"amrfinder.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.551","editor":"visual","theme":"cosmo","title":"AMRfinder","author":"Guillermo Cerrillo"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}